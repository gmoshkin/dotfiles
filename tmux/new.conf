# after 2.1

#enable mouse support
set -g mouse on

# two level mappings (i.e. <prefix>g<key>) for selecting different sessions
bind-key s switch-client -T session-select

bind-key -T session-select \; command-prompt 'new-session -As %%'
bind-key -T session-select \; split-window {
    find ~/ -maxdepth 5 -type d 2>/dev/null |
    fzf |
    cargo run --manifest-path ~/dotfiles/scripts/tmux-new-session/Cargo.toml 2>/dev/null
}
bind-key -T session-select s choose-tree -sN
bind-key -T session-select 0 run-shell "~/dotfiles/tmux/goto-ith-session 0"
bind-key -T session-select 1 run-shell "~/dotfiles/tmux/goto-ith-session 1"
bind-key -T session-select 2 run-shell "~/dotfiles/tmux/goto-ith-session 2"
bind-key -T session-select 3 run-shell "~/dotfiles/tmux/goto-ith-session 3"
bind-key -T session-select 4 run-shell "~/dotfiles/tmux/goto-ith-session 4"
bind-key -T session-select 5 run-shell "~/dotfiles/tmux/goto-ith-session 5"
bind-key -T session-select 6 run-shell "~/dotfiles/tmux/goto-ith-session 6"
bind-key -T session-select 7 run-shell "~/dotfiles/tmux/goto-ith-session 7"
bind-key -T session-select 8 run-shell "~/dotfiles/tmux/goto-ith-session 8"
bind-key -T session-select 9 run-shell "~/dotfiles/tmux/goto-ith-session 9"
bind-key -T session-select d\
    if-shell 'tmux has-session -t dots'\
        'new-session -As dots'\
        'new-session -As dots -c ~/dotfiles ; run-shell "~/dotfiles/scripts/tmuxlayout.sh dots"'
bind-key -T session-select m\
    if-shell 'type cmus &> /dev/null'\
        'new-session -As music "~/dotfiles/scripts/start-cmus.sh"'\
        'new-session -As music ; display-message "cmus command not found"'
bind-key -T session-select r\
    if-shell 'type rtorrent &> /dev/null'\
        'new-session -As rtorrent "rtorrent"'\
        'new-session -As rtorrent ; display-message "rtorrent command not found"'
bind-key -T session-select b\
    if-shell '[ -f ~/gotowork.sh ]'\
        'new-session -As bop "~/gotowork.sh"'\
        'new-session -As bop ; display-message "~/gotowork.sh not found"'
bind-key -T session-select t\
    if-shell '[ -f ~/gototsar.sh ]'\
        'new-session -As tsar "~/gototsar.sh"'\
        'new-session -As tsar ; display-message "~/gototsar.sh not found"'
bind-key -T session-select o\
    if-shell '[ -f ~/goto1+.sh ]'\
        'new-session -As 1+ "~/goto1+.sh"'\
        'new-session -As 1+ ; display-message "~/goto1+.sh not found"'
bind-key -T session-select + run-shell 'echo #S > /tmp/tmux-marked-session'
bind-key -T session-select x if-shell\
    'tmux has-session -t $(cat /tmp/tmux-marked-session)'\
    'run-shell "tmux switch-client -t $(cat /tmp/tmux-marked-session)"'\
    'display-message "No selected session, select session with <prefix>g+"'

# cmus remote control
bind-key m switch-client -T cmus-remote

bind-key -T cmus-remote z       run-shell '~/dotfiles/tmux/cmus-remote "--prev"'
bind-key -T cmus-remote k       run-shell '~/dotfiles/tmux/cmus-remote "--prev"'
bind-key -T cmus-remote x       run-shell '~/dotfiles/tmux/cmus-remote "--play"'
bind-key -T cmus-remote c       run-shell '~/dotfiles/tmux/cmus-remote "--pause"'
bind-key -T cmus-remote Space   run-shell '~/dotfiles/tmux/cmus-remote "--pause"'
bind-key -T cmus-remote v       run-shell '~/dotfiles/tmux/cmus-remote "--stop"'
bind-key -T cmus-remote b       run-shell '~/dotfiles/tmux/cmus-remote "--next"'
bind-key -T cmus-remote j       run-shell '~/dotfiles/tmux/cmus-remote "--next"'

bind-key -r -T cmus-remote .    run-shell '~/dotfiles/tmux/cmus-remote "--seek +1m"'
bind-key -r -T cmus-remote l    run-shell '~/dotfiles/tmux/cmus-remote "--seek +5"'
bind-key -r -T cmus-remote ,    run-shell '~/dotfiles/tmux/cmus-remote "--seek -1m"'
bind-key -r -T cmus-remote h    run-shell '~/dotfiles/tmux/cmus-remote "--seek -5"'
bind-key -r -T cmus-remote -    run-shell '~/dotfiles/tmux/cmus-remote volume -'
bind-key -r -T cmus-remote +    run-shell '~/dotfiles/tmux/cmus-remote volume +'

bind-key -T cmus-remote m       run-shell '~/dotfiles/tmux/cmus-remote "-C \"toggle aaa_mode\""'
bind-key -T cmus-remote o       run-shell '~/dotfiles/tmux/cmus-remote "-C \"toggle play_sorted\""'
bind-key -T cmus-remote M       run-shell '~/dotfiles/tmux/cmus-remote "-C \"toggle play_library\""'
bind-key -T cmus-remote C-r     run-shell '~/dotfiles/tmux/cmus-remote "-C \"toggle repeat_current\""'

bind-key -T cmus-remote C       run-shell '~/dotfiles/tmux/cmus-remote "-C \"toggle continue\""'
bind-key -T cmus-remote f       run-shell '~/dotfiles/tmux/cmus-remote "-C \"toggle follow\""'
bind-key -T cmus-remote r       run-shell '~/dotfiles/tmux/cmus-remote "--repeat"'
bind-key -T cmus-remote s       run-shell '~/dotfiles/tmux/cmus-remote "--shuffle"'

bind-key -T cmus-remote T       run-shell '~/dotfiles/tmux/cmus-mode settings'
bind-key -T cmus-remote R       run-shell '~/dotfiles/tmux/cmus-mode remote'
bind-key -T cmus-remote u       run-shell 'rm -f /tmp/tmux-powerline_$USER/cmus_remote.txt'

bind-key -T cmus-remote y       run-shell '~/dotfiles/tmux/cmus-remote "add-to-playlist"'

bind-key o switch-client -T open-pane
bind-key -T open-pane p     split-window -v 'ipython3'
bind-key -T open-pane 6     split-window -v 'jupyter-console --kernel=perl6'
bind-key -T open-pane r     split-window -v 'jupyter-console --kernel=rust'
bind-key -T open-pane r     split-window -v 'rlwrap raku || rlwrap perl6'
bind-key -T open-pane n     split-window -v 'node'
bind-key -T open-pane \;    command-prompt 'split-window -v "%%; read _"'

bind-key C-m send-keys -t '.{last}' C-p C-m
bind-key C-c send-keys -t '.{last}' C-p C-c

bind-key '#' switch-client -T put-hex-color

bind-key -T put-hex-color r     send-keys  '#dc322f' # red
bind-key -T put-hex-color g     send-keys  '#859900' # green
bind-key -T put-hex-color b     send-keys  '#268bd2' # blue
bind-key -T put-hex-color c     send-keys  '#2aa198' # cyan
bind-key -T put-hex-color m     send-keys  '#d33682' # magenta
bind-key -T put-hex-color y     send-keys  '#b58900' # yellow
bind-key -T put-hex-color o     send-keys  '#cb4b16' # orange
bind-key -T put-hex-color v     send-keys  '#6c71c4' # violet
bind-key -T put-hex-color 1     send-keys  '#002b36' # base03
bind-key -T put-hex-color 2     send-keys  '#073642' # base02
bind-key -T put-hex-color 3     send-keys  '#586e75' # base01
bind-key -T put-hex-color 4     send-keys  '#657b83' # base00
bind-key -T put-hex-color 7     send-keys  '#839496' # base0
bind-key -T put-hex-color 8     send-keys  '#93a1a1' # base1
bind-key -T put-hex-color 9     send-keys  '#eee8d5' # base2
bind-key -T put-hex-color 0     send-keys  '#fdf6e3' # base3

bind-key ? switch-client -T list-what

bind-key -T list-what k list-keys
bind-key -T list-what c list-commands
bind-key -T list-what f run-shell tmux-list-formats.sh
bind-key -T list-what o run-shell \
    "echo WINDOW OPTIONS:; echo; tmux show-options -wg; echo; \
     echo SESSION OPTIONS:; echo; tmux show-options -g; echo; \
     echo SERVER OPTIONS:; echo; tmux show-options -sg; echo;"
bind-key -T list-what v display-message -a

bind-key ! switch-client -T toggle-option

bind-key -T toggle-option p     set -w pane-border-status
bind-key -T toggle-option s     set -g status

bind-key p switch-client -T ps-pane
bind-key -T ps-pane w run-shell 'tmux-ps-pane.sh -w'
bind-key -T ps-pane l run-shell 'tmux-ps-pane.sh -l'
bind-key -T ps-pane v run-shell 'tmux-ps-pane.sh -v'

bind-key \' send-keys "'\\''"

run-shell '~/dotfiles/tmux/append-option command-alias "echo=display -p"'
