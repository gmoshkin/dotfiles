# pane navigation
bind-key C-k select-pane -U\; refresh-client -S
bind-key C-j select-pane -D\; refresh-client -S
bind-key C-h select-pane -L\; refresh-client -S
bind-key C-l select-pane -R\; refresh-client -S

# pane resizing
bind-key -r - resize-pane -U
bind-key -r + resize-pane -D
bind-key -r < resize-pane -L
bind-key -r > resize-pane -R

# window navigation
bind-key C-n next-window\; refresh-client -S
bind-key C-p previous-window\; refresh-client -S

# session navigation
bind-key -r ( switch-client -p\; refresh-client -S
bind-key -r ) switch-client -n\; refresh-client -S

# easy copy-mode entrance
bind-key C-y copy-mode
bind-key C-u copy-mode\; send-keys -X halfpage-up
bind-key C-b copy-mode\; send-keys -X page-up
bind-key [ copy-mode

bind-key ] paste-buffer
bind-key Space next-layout

bind-key C-t new-window
bind-key C-v \
    if-shell '~/dotfiles/tmux/has-marked' \
        'move-pane -h -s {marked}' \
        'split-window -h'
bind-key C-s \
    if-shell '~/dotfiles/tmux/has-marked' \
        'move-pane -v -s {marked}' \
        'split-window -v'

bind-key -r { swap-pane -U
bind-key -r } swap-pane -D

# update powerline segments by deleting tmp files
bind-key u run-shell "rm -r /tmp/tmux-powerline_$USER"\; refresh-client -S

# synchronise panes shortcut
bind-key S setw synchronize-panes

# window layout
bind-key M-1 select-layout even-horizontal
bind-key M-2 select-layout even-vertical
bind-key M-5 select-layout tiled

# custom window layout
bind-key M-3\
    select-layout main-horizontal\;\
    run-shell 'tmux resize-pane -t .0 -y $(( #{session_height} * 2 / 3 ))'\;\
    refresh-client

bind-key M-4\
    select-layout main-vertical\;\
    run-shell 'tmux resize-pane -t .0 -x $(( #{session_width} / 2 ))'\;\
    refresh-client

bind-key M-6 run-shell '~/dotfiles/scripts/tmuxlayout.sh scalable'

bind-key M-7 select-layout -E

# pipe the output from the pane to a file
bind-key P pipe-pane -o 'cat >>/tmp/tmux-output-#S:#I.#P'

bind-key '\' run-shell 'tmux break-pane -d -s $(~/dotfiles/tmux/target-pane)'
bind-key |\
    if-shell '[ "$(tmux list-windows -t #{session_name} | wc -l)" -gt 1 ]'\
        'run-shell "tmux join-pane -s :$.0 -t $(~/dotfiles/tmux/target-pane)"'\
        'run-shell "tmux split-window -v -t $(~/dotfiles/tmux/target-pane)"'

bind-key 'C-\' run-shell '~/dotfiles/tmux/swap-pane'

bind-key C source-file ~/.tmux.conf

bind-key W new-window 'curl "http://wttr.in/Moscow"; read -N1 _'
bind-key H new-window 'htop --user=$(whoami)'

bind-key X\
    run-shell "tmux list-clients | cut -d' ' -f2 > /tmp/tmux-session-to-kill"\;\
    switch-client -p\;\
    run-shell "tmux kill-session -t $(cat /tmp/tmux-session-to-kill); rm /tmp/tmux-session-to-kill"

bind-key . select-pane -m

bind-key / run-shell '~/dotfiles/tmux/rotate-pane'

bind-key l switch-client -l
bind-key L select-window -l

bind-key M run-shell 'tmux choose-tree -wf "##{==:##S,#S}" "select-pane -mt %%"'

bind-key Y send-keys ' && echo Y || echo N'

bind-key P run-shell 'tmux-ps-pane.sh'

bind-key T new-window 'ps-descendants.sh tmux-serv | invert-by-col.sh 3 | less'

bind-key f split-window 'tmux-find-pane.sh'
